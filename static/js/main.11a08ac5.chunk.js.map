{"version":3,"sources":["Event.js","EventList.js","Alert.js","CitySearch.js","EventGenre.js","NumberOfEvents.js","WelcomeScreen.jsx","mock-data.js","api.js","App.js","serviceWorkerRegistration.js","reportWebVitals.js","index.js"],"names":["Event","state","collapsed","handleClick","setState","this","event","props","className","summary","start","dateTime","location","onClick","description","Component","EventList","events","map","id","Alert","getStlye","color","style","text","InfoAlert","ErrorAlert","CitySearch","query","suggestions","showSuggestions","undefined","infoText","handleInputChanged","value","target","locations","filter","toUpperCase","indexOf","length","handleItemClicked","suggestion","updateEvents","type","onChange","onFocus","display","EventGenre","useState","data","setData","useEffect","genre","split","includes","name","ResponsiveContainer","height","PieChart","width","Pie","cx","cy","labelLine","outerRadius","fill","dataKey","label","percent","toFixed","NumberOfEvents","numberOfEvents","errorText","updateEventCount","WelcomeScreen","showWelcomeScreen","align","class","src","alt","getAccessToken","rel","href","mockData","extractLocations","Set","checkToken","accessToken","a","fetch","then","res","json","catch","error","result","removeQuery","window","history","pushState","pathname","newurl","protocol","host","getToken","code","encodeCode","encodeURIComponent","access_token","localStorage","setItem","getEvents","NProgress","startsWith","done","navigator","onLine","getItem","JSON","parse","token","url","axios","get","stringify","tokenCheck","removeItem","searchParams","URLSearchParams","search","results","authUrl","App","currentLocation","offlineText","locationEvents","slice","eventCount","getData","number","city","shift","mounted","isTokenValid","ScatterChart","margin","top","right","bottom","left","CartesianGrid","XAxis","YAxis","allowDecimals","Tooltip","cursor","strokeDasharray","Scatter","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","config","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","atatus","install","ReactDOM","render","StrictMode","document","getElementById","URL","process","origin","addEventListener","headers","response","contentType","status","ready","unregister","reload","checkValidServiceWorker","serviceWorkerRegistration"],"mappings":"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","file":"static/js/main.11a08ac5.chunk.js","sourcesContent":["import React, { Component } from \"react\";\n\nclass Event extends Component {\n  state = {\n    collapsed: true,\n  };\n\n  handleClick = () => {\n    this.setState({\n      collapsed: !this.state.collapsed, \n    });\n  };\n\n  render() {\n    const { collapsed } = this.state;\n    const { event } = this.props; \n\n    return <div className=\"event\">\n      <h1 className=\"event-summary\">{event.summary}</h1> \n      <p className=\"start-date\">{event.start.dateTime}</p>\n      <p className=\"location\">{event.location}</p>\n      <button className=\"details-btn\" onClick={this.handleClick}>Show Details</button>\n      <div className={`details ${collapsed ? `hidden` : `visible`}`}>\n        <h3>About the event: </h3>\n        <a>See Details on Google Calendar</a>\n        <p className=\"event-description\">{event.description}</p>\n      </div>\n    </div>;\n  }\n}\nexport default Event;","import React, { Component } from 'react';\nimport Event from './Event';\n\nclass EventList extends Component {\n  render() {\n    const { events } = this.props;\n    return (\n      <ul className=\"EventList\">\n        {events.map(event => \n          <li key={event.id}>\n            <Event event={event} />\n          </li>\n          )}\n      </ul>\n    );\n  }\n}\n\nexport default EventList; ","import React, { Component } from 'react';\n\nclass Alert extends Component {\n  constructor(props) {\n    super(props);\n    this.color = null;\n  }\n\n  getStlye = () => {\n    return {\n      color: this.color,\n    };\n  }\n\n  render() {\n    return (\n      <div className=\"Alert\">\n        <p style={this.getStlye()}>{this.props.text}</p>\n      </div>\n    );\n  }\n}\n\nclass InfoAlert extends Alert {\n  constructor(props) {\n    super(props);\n    this.color = 'blue';\n  }\n}\n\nclass ErrorAlert extends Alert {\n  constructor(props) {\n    super(props);\n    this.color = 'red';\n  }\n}\n\nexport { InfoAlert, ErrorAlert };","import React, { Component } from 'react';\nimport { InfoAlert } from './Alert';\n\n\nclass CitySearch extends Component {\n  state = {\n    query: '',\n    suggestions: [],\n    showSuggestions: undefined,\n    infoText: '',\n  }\n\n  handleInputChanged = (event) => {\n    const value = event.target.value;\n    this.setState({showSuggestions:true});\n    const suggestions = this.props.locations.filter((location) => {\n      return location.toUpperCase().indexOf(value.toUpperCase()) > -1;\n    });\n    if (suggestions.length === 0) {\n      this.setState({\n        query: value,\n        infoText: 'We can not find the city you are looking for. Please try another city',\n      });\n    } else {\n      return this.setState({\n        query: value,\n        suggestions,\n        infoText:''\n      });\n    }\n  };\n\n  handleItemClicked = (suggestion) => {\n    this.setState({\n      query: suggestion,\n      showSuggestions: false\n    });\n    this.props.updateEvents(suggestion);\n  }\n\n  render() {\n    return (\n      <div className=\"CitySearch\">\n        <input\n          type=\"text\"\n          className=\"city\"\n          value={this.state.query}\n          onChange={this.handleInputChanged}\n          onFocus={() => { this.setState({ showSuggestions: true })}}\n          />\n          <ul className=\"suggestions\" style={this.state.showSuggestions ? {}: { display: 'none' }}>\n            {this.state.suggestions.map((suggestion) => (\n              <li \n              key={suggestion}\n              onClick={() => this.handleItemClicked(suggestion)}\n              >{suggestion}</li>\n            ))}\n            <li \n            key='all'\n            onClick={() => this.handleItemClicked(\"all\")}>\n              <b>See all cities</b>\n              <InfoAlert text={this.state.infoText} />\n            </li>\n          </ul>\n      </div>\n    );\n  }\n}\n\nexport default CitySearch;","import React, { useEffect, useState } from 'react';\nimport {\n  PieChart, Pie, Cell, ResponsiveContainer\n} from 'recharts';\n\nconst EventGenre = ( {events} ) => {\n  const [ data, setData ] = useState([]);\n\n  const getData = () => {\n    const genres = ['React', 'JavaScript', 'Node', 'jQuery', 'AngularJS'];\n    const data = genres.map((genre) => {\n      const value = events.filter((event) => event.summary.split(' ').includes(genre)).length;\n      return { name: genre, value: value };\n    });\n    return data;\n  };\n\n  useEffect(() => { setData(() => getData()); }, [events]);\n\n /* const data = [\n    { name: 'Group A', value: 400 },\n    { name: 'Group B', value: 300 },\n    { name: 'Group C', value: 300 },\n    { name: 'Group D', value: 200 },\n  ]; */\n  return (\n    <ResponsiveContainer height={400} >\n      <PieChart width={400} height={400}>\n        <Pie \n          data={data}\n          cx={200}\n          cy={200}\n          labelLine={false}\n          outerRadius={80}\n          fill=\"#8884d8\"\n          dataKey=\"value\"\n          label={({ name, percent }) => `${name} ${(percent * 100 ).toFixed(0)}%`}\n        >\n        </Pie>\n      </PieChart>\n    </ResponsiveContainer>\n  );\n}\n\nexport default EventGenre;\n\n","import React, { Component } from 'react';\nimport { ErrorAlert } from './Alert';\n\nclass NumberOfEvents extends Component {\n  state = {\n    numberOfEvents: 32,\n    errorText: '',\n  }\n\n  handleInputChanged = (event) => {\n    const value = event.target.value;\n    if (value < 1 || value > 32) {\n      this.setState({\n        numberOfEvents: '',\n        errorText: 'Please enter a number between 1 and 32',\n      })\n    } else {\n      this.setState({\n        numberOfEvents: value,\n        errorText: '',\n      });\n    }\n    this.props.updateEventCount(value);\n  }\n\n  render() {\n    return(\n      <div className=\"number-of-events\">\n        <input\n          type=\"number\"\n          className=\"events-input\"\n          value={this.props.numberOfEvents}\n          onChange={this.handleInputChanged}\n          />\n          <ErrorAlert text={this.state.errorText} />\n      </div>\n    );\n  }\n}\n\nexport default NumberOfEvents;","import React from \"react\";\nimport './WelcomeScreen.css';\nfunction WelcomeScreen(props) {\n  return props.showWelcomeScreen ?\n    (\n      <div className=\"WelcomeScreen\">\n        <h1>Welcome to the Meet app</h1>\n        <h4>\n          Log in to see upcoming events around the world for\n          full-stack\n          developers\n      </h4>\n        <div className=\"button_cont\" align=\"center\">\n          <div class=\"google-btn\">\n            <div class=\"google-icon-wrapper\">\n              <img\n                class=\"google-icon\"\n                src=\"https://upload.wikimedia.org/wikipedia/commons/5/53/Google_%22G%22_Log\no.svg\"\n                alt=\"Google sign-in\"\n              />\n            </div>\n            <button onClick={() => { props.getAccessToken() }}\n              rel=\"nofollow noopener\"\n              class=\"btn-text\"\n            >\n              <b>Sign in with google</b>\n            </button>\n          </div>\n        </div>\n        <a\n          href=\"https://jgtorres95.github.io/meet/privacy.html\"\n          rel=\"nofollow noopener\"\n        >\n          Privacy policy\n</a>\n      </div>)\n    : null\n}\nexport default WelcomeScreen;","const mockData = [\n  {\n    \"kind\": \"calendar#event\",\n    \"etag\": \"\\\"3181161784712000\\\"\",\n    \"id\": \"4eahs9ghkhrvkld72hogu9ph3e_20200519T140000Z\",\n    \"status\": \"confirmed\",\n    \"htmlLink\": \"https://www.google.com/calendar/event?eid=NGVhaHM5Z2hraHJ2a2xkNzJob2d1OXBoM2VfMjAyMDA1MTlUMTQwMDAwWiBmdWxsc3RhY2t3ZWJkZXZAY2FyZWVyZm91bmRyeS5jb20\",\n    \"created\": \"2020-05-19T19:17:46.000Z\",\n    \"updated\": \"2020-05-27T12:01:32.356Z\",\n    \"summary\": \"Learn JavaScript\",\n    \"description\": \"Have you wondered how you can ask Google to show you the list of the top ten must-see places in London? And how Google presents you the list? How can you submit the details of an application? Well, JavaScript is doing these. :) \\n\\nJavascript offers interactivity to a dull, static website. Come, learn JavaScript with us and make those beautiful websites.\",\n    \"location\": \"London, UK\",\n    \"creator\": {\n     \"email\": \"fullstackwebdev@careerfoundry.com\",\n     \"self\": true\n    },\n    \"organizer\": {\n     \"email\": \"fullstackwebdev@careerfoundry.com\",\n     \"self\": true\n    },\n    \"start\": {\n     \"dateTime\": \"2020-05-19T16:00:00+02:00\",\n     \"timeZone\": \"Europe/Berlin\"\n    },\n    \"end\": {\n     \"dateTime\": \"2020-05-19T17:00:00+02:00\",\n     \"timeZone\": \"Europe/Berlin\"\n    },\n    \"recurringEventId\": \"4eahs9ghkhrvkld72hogu9ph3e\",\n    \"originalStartTime\": {\n     \"dateTime\": \"2020-05-19T16:00:00+02:00\",\n     \"timeZone\": \"Europe/Berlin\"\n    },\n    \"iCalUID\": \"4eahs9ghkhrvkld72hogu9ph3e@google.com\",\n    \"sequence\": 0,\n    \"reminders\": {\n     \"useDefault\": true\n    },\n    \"eventType\": \"default\"\n   },\n   {\n    \"kind\": \"calendar#event\",\n    \"etag\": \"\\\"3181159875584000\\\"\",\n    \"id\": \"3qtd6uscq4tsi6gc7nmmtpqlct_20200520T120000Z\",\n    \"status\": \"confirmed\",\n    \"htmlLink\": \"https://www.google.com/calendar/event?eid=M3F0ZDZ1c2NxNHRzaTZnYzdubW10cHFsY3RfMjAyMDA1MjBUMTIwMDAwWiBmdWxsc3RhY2t3ZWJkZXZAY2FyZWVyZm91bmRyeS5jb20\",\n    \"created\": \"2020-05-19T19:14:30.000Z\",\n    \"updated\": \"2020-05-27T11:45:37.792Z\",\n    \"summary\": \"React is Fun\",\n    \"description\": \"Love HTML, CSS, and JS? Want to become a cool front-end developer? \\n\\nReact is one of the most popular front-end frameworks. There is a huge number of job openings for React developers in most cities. \\n\\nJoin us in our free React training sessions and give your career a new direction. \",\n    \"location\": \"Berlin, Germany\",\n    \"creator\": {\n     \"email\": \"fullstackwebdev@careerfoundry.com\",\n     \"self\": true\n    },\n    \"organizer\": {\n     \"email\": \"fullstackwebdev@careerfoundry.com\",\n     \"self\": true\n    },\n    \"start\": {\n     \"dateTime\": \"2020-05-20T14:00:00+02:00\",\n     \"timeZone\": \"Europe/Berlin\"\n    },\n    \"end\": {\n     \"dateTime\": \"2020-05-20T15:00:00+02:00\",\n     \"timeZone\": \"Europe/Berlin\"\n    },\n    \"recurringEventId\": \"3qtd6uscq4tsi6gc7nmmtpqlct\",\n    \"originalStartTime\": {\n     \"dateTime\": \"2020-05-20T14:00:00+02:00\",\n     \"timeZone\": \"Europe/Berlin\"\n    },\n    \"iCalUID\": \"3qtd6uscq4tsi6gc7nmmtpqlct@google.com\",\n    \"sequence\": 0,\n    \"reminders\": {\n     \"useDefault\": true\n    },\n    \"eventType\": \"default\"\n   },\n];\n\nexport { mockData };\n\n","/** \n* This function takes an events array, then uses map to create a new array with only locations.\n* It will also remove all duplicates by creating another new array using the spread operator and spreading a Set.\n* The Set will remove all duplicates from the array.\n*/\nimport { mockData } from './mock-data';\nimport axios from 'axios';\nimport NProgress from 'nprogress';\n\nimport './nprogress.css'; \n\nexport const extractLocations = (events) => {\n  var extractLocations = events.map((event) => event.location);\n  var locations = [...new Set(extractLocations)];\n  return locations;\n};\n\nexport const checkToken = async (accessToken) => {\n  const result = await fetch(\n    `https://www.googleapis.com/oauth2/v1/tokeninfo?access_token=${accessToken}`\n  )\n    .then((res) => res.json())\n    .catch((error) => error.json());\n\n  return result; \n}\n\nconst removeQuery = () => {\n  if (window.history.pushState && window.location.pathname) {\n    var newurl =\n      window.location.protocol +\n      \"//\" +\n      window.location.host +\n      window.location.pathname;\n    window.history.pushState(\"\", \"\", newurl);\n  } else {\n    newurl = window.location.protocol + \"//\" + window.location.host;\n    window.history.pushState(\"\", \"\", newurl);\n  }\n};\n\nconst getToken = async (code) => {\n  const encodeCode = encodeURIComponent(code);\n  const { access_token } = await fetch(\n    'https://nw4q8s4ig6.execute-api.us-west-1.amazonaws.com/dev/api/token' + '/' + encodeCode\n  )\n\n  .then((res) => {\n    return res.json();\n  })\n  .catch((error) => error);\n\n  access_token && localStorage.setItem(\"access_token\", access_token);\n\n  return access_token;\n};\n\nexport const getEvents = async () => {\n  NProgress.start();\n\n  if (window.location.href.startsWith('http://localhost')) {\n    NProgress.done();\n    return mockData;\n  }\n\n  if (!navigator.onLine) {\n    const data = localStorage.getItem(\"lastEvents\");\n    NProgress.done();\n    return data?JSON.parse(data).events:[];;\n  }\n\n  const token = await getAccessToken();\n\n  if (token) {\n    removeQuery();\n    const url = 'https://nw4q8s4ig6.execute-api.us-west-1.amazonaws.com/dev/api/get-events' + '/' + token;\n    const result = await axios.get(url);\n    if(result.data) {\n      var locations = extractLocations(result.data.events);\n      localStorage.setItem(\"last events\", JSON.stringify(result.data));\n      localStorage.setItem(\"locations\", JSON.stringify(locations));\n    }\n    NProgress.done();\n    return result.data.events;\n  }\n};\n\nexport const getAccessToken = async () => {\n  const accessToken = localStorage.getItem('access_token');\n  const tokenCheck = accessToken && (await checkToken(accessToken));\n\n  if (!accessToken || tokenCheck.error) {\n    await localStorage.removeItem('access_token');\n    const searchParams = new URLSearchParams(window.location.search);\n    const code = await searchParams.get('code');\n    if (!code) {\n      const results = await axios.get(\n        \"https://nw4q8s4ig6.execute-api.us-west-1.amazonaws.com/dev/api/get-auth-url\"\n      );\n      const { authUrl } = results.data;\n      return (window.location.href = authUrl);\n    }\n    return code && getToken(code);\n  }\n  return accessToken;\n}","import React, { Component}  from 'react';\nimport './App.css';\nimport EventList from './EventList';\nimport CitySearch from './CitySearch';\nimport EventGenre from './EventGenre';\nimport NumberOfEvents from './NumberOfEvents';\nimport { InfoAlert } from './Alert';\nimport WelcomeScreen from './WelcomeScreen';\nimport { getEvents, extractLocations, checkToken, getAccessToken } from './api';\nimport { ScatterChart, Scatter, XAxis, YAxis, CartesianGrid, Tooltip, ResponsiveContainer } from 'recharts';\n\nclass App extends Component {\n  state = {\n    events: [],\n    locations: [],\n    currentLocation: 'all',\n    numberOfEvents: 32,\n    offlineText: '',\n    showWelcomeScreen: undefined, \n  }\n\n  updateEvents = (location) => {\n    getEvents().then((events) => {\n      const locationEvents = (location === 'all') ?\n        events :\n        events.filter((event) => event.location === location);\n      this.setState({\n        events: locationEvents.slice(0, this.state.numberOfEvents),\n        currentLocation: location, \n      });\n    });\n  }\n\n  updateEventCount = (eventCount) => {\n    this.setState({\n      numberOfEvents: eventCount\n    })\n    this.updateEvents(this.state.currentLocation);\n  }\n\n  getData = () => {\n    const {locations, events} = this.state;\n    const data = locations.map((location) => {\n      const number = events.filter((event) => event.location === location).length\n      const city = location.split(', ').shift()\n      return {city, number};\n    })\n    return data;\n  }\n\n  /*setOfflineText = () => {\n  if (!navigator.onLine) {\n    this.setState({\n      offlineText: 'You are currently offline'\n    })\n  } else {\n    this.setState({\n      offlineText: '',\n    })\n  }\n  }*/\n\n  async componentDidMount() {\n    this.mounted = true;\n    const accessToken = localStorage.getItem('access_token');\n    const isTokenValid = (await checkToken(accessToken)).error ? false : true;\n    const searchParams = new URLSearchParams(window.location.search);\n    const code = searchParams.get(\"code\");\n    this.setState({ showWelcomeScreen: !(code || isTokenValid) });\n    if ((code || isTokenValid) && this.mounted) {\n      getEvents().then((events) => {\n        if (this.mounted) {\n          this.setState({ events, locations: extractLocations(events) });\n        }\n      });\n    }\n    if (!navigator.onLine) {\n      this.setState({\n        offlineText: 'You are currently offline'\n      })\n    } else {\n      this.setState({\n        offlineText: '',\n      })\n    }\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  render() {\n    //const { locations } = this.state;\n    if (this.state.showWelcomeScreen === undefined) return <div className=\"App\" />\n    return (\n      <div className=\"App\">\n        <h1>Meet App</h1>\n        <h4>Search for events in your nearest city</h4>\n        <InfoAlert text={this.state.offlineText} />\n        <CitySearch locations={this.state.locations} updateEvents={this.updateEvents} />\n        <NumberOfEvents updateEventCount={this.updateEventCount} numberOfEvents={this.state.numberOfEvents}/>\n        <div className=\"data-vis-wrapper\">\n          <EventGenre events={this.state.events} />\n          <ResponsiveContainer height={400} >\n            <ScatterChart margin={{ top: 20, right: 20, bottom: 20, left: 20 }}>\n              <CartesianGrid />\n              <XAxis type=\"category\" dataKey=\"city\" name=\"city\" />\n              <YAxis\n                allowDecimals={false}\n                type=\"number\"\n                dataKey=\"number\"\n                name=\"number of events\"\n              />\n              <Tooltip cursor={{ strokeDasharray: \"3 3\" }} />\n              <Scatter data={this.getData()} fill=\"#8884d8\" />\n            </ScatterChart>\n          </ResponsiveContainer>\n        </div>\n        <EventList events={this.state.events}/>\n        <WelcomeScreen showWelcomeScreen={this.state.showWelcomeScreen} getAccessToken={() => { getAccessToken() }} />\n      </div>\n    );\n  }\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://cra.link/PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://cra.link/PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration';\nimport reportWebVitals from './reportWebVitals';\nimport * as atatus from 'atatus-spa';\n\natatus.config('117b18d251074bd096ee6a9ddae60f8d').install();\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://cra.link/PWA\n//serviceWorkerRegistration.unregister();\nserviceWorkerRegistration.register();\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n\n"],"sourceRoot":""}